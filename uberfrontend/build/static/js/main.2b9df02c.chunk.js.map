{"version":3,"sources":["components/BookingApiCalls.js","components/Navbar.js","components/HomePage.js","components/AccessApiCalls.js","components/Login.js","components/SignUp.js","components/Logout.js","components/ViewBookings.js","components/Error.js","App.js","reportWebVitals.js","index.js"],"names":["url","Navbar","props","state","show","toggleMenu","bind","console","log","this","setState","afterLogin","class","className","to","src","alt","width","height","localStorage","fname","type","onClick","style","display","beforeLogin","isLoggedIn","Component","HomePage","source","destination","operator","operatorsList","date","time","enable","success","noTiketsMessage","errors","submit","handleDateChange","getOperator","handleSourceChange","handleDestinationChange","handleOperatorChange","handleSubmit","handleTimeChange","getItem","history","push","event","target","value","Date","preventDefault","booking","axios","post","then","res","catch","getoperator","status","data","size","Object","keys","length","key","e","defaultBooking","email","ride_time","addbooking","error","setTimeout","onSubmit","onChange","required","selected","minDate","moment","toDate","start","end","step","id","disabled","map","index","validEmailRegex","RegExp","validateForm","valid","values","forEach","val","countErrors","count","Login","goToSignUp","handleChange","name","test","password","formValid","errorCount","user","userObj","setItem","message","msg","includes","alert","noValidate","placeholder","nameRegex","SignUp","lname","repassword","newUser","path","component","Logout","removeItem","ViewBookings","bookings","present","handleSearchKeyUp","keyUpHandler","deleteBooking","split","object","filter","tr","td","i","document","getElementById","toUpperCase","getElementsByTagName","textContent","innerText","indexOf","onKeyUp","title","hidden","substring","Error","color","App","exact","Home","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2b9df02c.chunk.js","sourcesContent":["import axios from \"axios\";\nconst url = \"http://localhost:5000/app/\";\n//const url = `http://${process.env.REACT_APP_IP_ADDRESS}:5000/app/`;\n\nexport const getoperator = (booking) => {\n  return axios\n    .post(url + \"getoperator\", {\n      source: booking.source,\n      destination: booking.destination,\n      date: booking.date,\n    })\n    .then((res) => {\n      console.log(res);\n      return res;\n    })\n    .catch((res) => {\n      console.log(res);\n      return res;\n    });\n};\n\nexport const addbooking = (booking) => {\n  return axios\n    .post(url + \"addbooking\", {\n      email: booking.email,\n      source: booking.source,\n      destination: booking.destination,\n      date: booking.date,\n      operator: booking.operator,\n    })\n    .then((res) => {\n      console.log(res);\n      return res;\n    })\n    .catch((res) => {\n      console.log(res);\n    });\n};\n\nexport const getbookings = (booking) => {\n  return axios\n    .post(url + \"getbookings\", {\n      email: localStorage.getItem(\"email\"),\n    })\n    .then((res) => {\n      console.log(\"Try\");\n      console.log(res);\n      return res;\n    })\n    .catch((res) => {\n      console.log(\"Catch\");\n      console.log(res);\n    });\n};\n\nexport const deletebooking = (booking) => {\n  return axios\n    .post(url + \"delete\", {\n      email: localStorage.getItem(\"email\"),\n      source: booking.source,\n      destination: booking.destination,\n      date: booking.date,\n      operator: booking.operator,\n    })\n    .then((res) => {\n      console.log(res);\n      return res;\n    })\n    .catch((res) => {\n      console.log(res);\n    });\n};\n","import { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Navbar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            show: false,\n        };\n        this.toggleMenu = this.toggleMenu.bind(this);\n\n        console.log(this.state.show);\n        // this.toggleMenu = this.toggleMenu.bind(this);\n    }\n    toggleMenu() {\n        this.setState({ show: !this.state.show });\n    }\n    render() {\n        const afterLogin = (\n            <nav class=\"navbar navbar-expand-md navbar-dark bg-dark mb-3 fixed-top\">\n                <div className=\"container-fluid\">\n                    <Link className=\"navbar-brand mr-3\" to={\"/home\"}>\n                        <img\n                            src=\"static/bus.png\"\n                            alt=\"\"\n                            width=\"50px\"\n                            height=\"50px\"\n                        />{\" \"}\n                    </Link>\n                    <h3 className=\"navbar-brand mr-3\">\n                        {\" \"}\n                        Hi {localStorage.fname}\n                    </h3>\n                    <button\n                        type=\"button\"\n                        class=\"navbar-toggler\"\n                        onClick={this.toggleMenu}\n                    >\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <div\n                        style={\n                            this.state.show\n                                ? { display: \"block\" }\n                                : { display: \"none\" }\n                        }\n                        className=\"collapse navbar-collapse\"\n                    >\n                        <div className=\"navbar-nav ml-auto\">\n                            <Link\n                                className=\"nav-item nav-link\"\n                                to={\"/view-bookings\"}\n                            >\n                                View Bookings\n                            </Link>\n\n                            <Link className=\"nav-item nav-link\" to={\"/home\"}>\n                                Home\n                            </Link>\n\n                            <Link className=\"nav-item nav-link\" to={\"/logout\"}>\n                                Logout\n                            </Link>\n                        </div>\n                    </div>\n                </div>\n            </nav>\n        );\n\n        const beforeLogin = (\n            <nav class=\"navbar navbar-expand-md navbar-dark bg-dark mb-3 fixed-top\">\n                <div className=\"container-fluid\">\n                    <Link className=\"navbar-brand mr-3\" to={\"/home\"}>\n                        <img\n                            src=\"static/bus.png\"\n                            alt=\"\"\n                            width=\"50px\"\n                            height=\"50px\"\n                        />{\" \"}\n                    </Link>\n                    <button\n                        type=\"button\"\n                        className=\"navbar-toggler\"\n                        onClick={this.toggleMenu}\n                    >\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <div\n                        style={\n                            this.state.show\n                                ? { display: \"block\" }\n                                : { display: \"none\" }\n                        }\n                        className=\"collapse navbar-collapse\"\n                    >\n                        <div className=\"navbar-nav ml-auto \">\n                            <Link className=\"nav-item nav-link\" to={\"/sign-in\"}>\n                                Login\n                            </Link>\n\n                            <Link className=\"nav-item nav-link\" to={\"/sign-up\"}>\n                                Sign up\n                            </Link>\n                        </div>\n                    </div>\n                </div>\n            </nav>\n        );\n\n        return <>{localStorage.isLoggedIn ? afterLogin : beforeLogin}</>;\n    }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\n// import TimePickerPage from \"./TimePickerPage\";\nimport DatePicker from \"react-datepicker\";\nimport TimePicker from \"react-bootstrap-time-picker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"rc-time-picker/assets/index.css\";\nimport moment from \"moment\";\nimport { addbooking, getoperator } from \"./BookingApiCalls\";\nimport Navbar from \"./Navbar\";\nvar currDate = \"\";\nvar currTime = \"\";\nexport default class HomePage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            source: \"Select Source\",\n            destination: \"Select Destination\",\n            operator: \"\",\n            operatorsList: [],\n            date: currDate,\n            time: 0,\n            enable: true,\n            success: \"\",\n            noTiketsMessage: \"The Bus is full\",\n            errors: {\n                source: \"\",\n                destination: \"\",\n                operator: \"\",\n                date: \"\",\n                submit: \"\",\n            },\n        };\n        this.handleDateChange = this.handleDateChange.bind(this);\n        this.getOperator = this.getOperator.bind(this);\n        this.handleSourceChange = this.handleSourceChange.bind(this);\n        this.handleDestinationChange = this.handleDestinationChange.bind(this);\n        this.handleOperatorChange = this.handleOperatorChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleTimeChange = this.handleTimeChange.bind(this);\n    }\n\n    componentDidMount() {\n        if (localStorage.getItem(\"isLoggedIn\") === null) {\n            this.props.history.push(\"/\");\n        }\n    }\n\n    handleTimeChange(time) {\n        console.log(time); // <- prints \"3600\" if \"01:00\" is picked\n        this.setState({ time });\n    }\n    handleSourceChange(event) {\n        this.setState({\n            source: event.target.value,\n            destination: \"Select Destination\",\n            date: currDate,\n            operator: \"\",\n            errors: {\n                source: \"\",\n                destination: \"\",\n                submit: \"\",\n            },\n        });\n    }\n\n    handleDateChange(value) {\n        if (this.state.source === \"Select Source\") {\n            this.setState({\n                errors: {\n                    source: \"Source cannot be empty\",\n                    destination: \"\",\n                },\n            });\n        } else if (this.state.destination === \"Select Destination\") {\n            this.setState({\n                errors: {\n                    source: \"\",\n                    destination: \"Destionation cannot be empty\",\n                },\n            });\n        } else {\n            console.log(\"Value\");\n            console.log(value);\n            this.setState({\n                date: new Date(value),\n                operatorsList: [],\n                operator: \"\",\n                errors: {\n                    source: \"\",\n                    destination: \"\",\n                },\n            });\n            console.log(\"Check\");\n            console.log(this.state.date);\n        }\n    }\n\n    getOperator(event) {\n        event.preventDefault();\n        console.log(\"Get Operator\");\n        console.log(this.state.date);\n        const booking = {\n            source: this.state.source,\n            destination: this.state.destination,\n            date: this.state.date,\n        };\n        getoperator(booking).then((res) => {\n            if (res.status === 200) {\n                if (\n                    res.data[\"message\"] ===\n                        \"No operators has seats available\" ||\n                    res.data[\"message\"] === \"No operators found\"\n                ) {\n                    console.log(\"Operator data1\");\n                    console.log(res.data);\n                    this.setState({\n                        operatorsList: [],\n                        enable: true,\n                        errors: {\n                            source: \"\",\n                            destination: \"\",\n                            operator:\n                                \"No operators has seats available. Select another date.\",\n                            submit: \"\",\n                        },\n                    });\n                } else {\n                    console.log(\"Operator data2\");\n                    console.log(res.data);\n                    let size = Object.keys(res.data).length;\n                    console.log(size);\n                    if (size < 1) {\n                        this.setState({\n                            operatorsList: [],\n                            enable: true,\n                            errors: {\n                                operator: \"No operator found\",\n                                submit: \"\",\n                            },\n                        });\n                    } else {\n                        this.setState({\n                            enable: false,\n                        });\n                        this.setState({\n                            operatorsList: res.data,\n                            operator: res.data[0][\"name\"],\n                            errors: {\n                                source: \"\",\n                                destination: \"\",\n                                operator: \"\",\n                            },\n                        });\n                    }\n                }\n            }\n        });\n    }\n\n    handleDestinationChange(event) {\n        if (this.state.source === \"Select Source\") {\n            this.setState({\n                errors: {\n                    source: \"Source cannot be empty\",\n                    destination: \"\",\n                },\n            });\n        } else if (this.state.source === event.target.value) {\n            this.setState({\n                errors: {\n                    source: \"\",\n                    destination: \"Destination cannot be same as source\",\n                },\n            });\n        } else {\n            this.setState({\n                destination: event.target.value,\n                date: currDate,\n                operator: \"\",\n                errors: {\n                    source: \"\",\n                    destination: \"\",\n                },\n            });\n        }\n    }\n\n    handleOperatorChange(event) {\n        console.log(event.target.key);\n        this.setState({ operator: event.target.value });\n        console.log(\"Operator Change:\", this.state.operator);\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        console.log(currDate);\n        console.log(this.state.date);\n        console.log(this.state.operator);\n\n        const defaultBooking = {\n            source: \"Select Source\",\n            destination: \"Select Destination\",\n            date: \"\",\n            operator: \"\",\n        };\n        if (\n            this.state.source === defaultBooking.source ||\n            this.state.destination === defaultBooking.destination ||\n            this.state.date === defaultBooking.date ||\n            this.state.operator === defaultBooking.operator\n        ) {\n            this.setState({\n                errors: {\n                    submit: \"Select all the required fields\",\n                },\n            });\n        } else {\n            const booking = {\n                email: localStorage.getItem(\"email\"),\n                source: this.state.source,\n                destination: this.state.destination,\n                date: this.state.date,\n                operator: this.state.operator,\n                ride_time: this.state.time,\n            };\n            console.log(booking);\n            addbooking(booking).then((res) => {\n                if (res.status === 200) {\n                    if (res.data[\"message\"] === \"Operator not available\") {\n                        this.setState({\n                            error: {\n                                source: \"\",\n                                destination: \"\",\n                                operator: res.data[\"message\"],\n                                operatorsList: [],\n                                submit: res.data[\"message\"],\n                            },\n                        });\n                    } else {\n                        let size = Object.keys(res.data).length;\n                        console.log(size);\n                        if (size < 1) {\n                            this.setState({\n                                error: {\n                                    source: \"\",\n                                    destination: \"\",\n                                    operator: \"\",\n                                    operatorsList: [],\n                                    submit: \"No buses found\",\n                                },\n                            });\n                        }\n                        this.setState({\n                            source: \"Select Source\",\n                            destination: \"Select Destination\",\n                            operator: \"\",\n                            operatorsList: [],\n                            date: currDate,\n                            enable: true,\n                        });\n                        setTimeout(\n                            () =>\n                                this.setState({\n                                    success: \"Booking done successfully\",\n                                }),\n                            1000\n                        );\n                    }\n                }\n            });\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <Navbar />\n                <div class=\"container\">\n                    <div class=\"jumbotron\">\n                        <form onSubmit={this.handleSubmit}>\n                            <h3>Bus Ticket Booking</h3>\n                            <div className=\"form-group\">\n                                <select\n                                    className=\"custom-select\"\n                                    value={this.state.source}\n                                    onChange={this.handleSourceChange}\n                                    required\n                                >\n                                    <option value=\"destination\">\n                                        Select Source\n                                    </option>\n                                    <option value=\"Boston\">Boston</option>\n                                    <option value=\"New York\">New York</option>\n                                    <option value=\"Pittsburgh\">\n                                        Pittsburgh\n                                    </option>\n                                </select>\n                                {this.state.errors.source !== \"\" && (\n                                    <span className=\"error\">\n                                        {this.state.errors.source}\n                                    </span>\n                                )}\n                            </div>\n\n                            <div className=\"form-group\">\n                                <select\n                                    className=\"custom-select\"\n                                    value={this.state.destination}\n                                    onChange={this.handleDestinationChange}\n                                    required\n                                >\n                                    <option value=\"destination\">\n                                        Select Destination\n                                    </option>\n                                    <option value=\"Boston\">Boston</option>\n                                    <option value=\"New York\">New York</option>\n                                    <option value=\"Pittsburgh\">\n                                        Pittsburgh\n                                    </option>\n                                </select>\n                                {this.state.errors.destination !== \"\" && (\n                                    <span className=\"error\">\n                                        {this.state.errors.destination}\n                                    </span>\n                                )}\n                            </div>\n\n                            <div className=\"form-group\">\n                                <DatePicker\n                                    className=\"custom-select\"\n                                    value={this.state.date}\n                                    selected={this.state.date}\n                                    onChange={this.handleDateChange}\n                                    minDate={moment().toDate()}\n                                    required\n                                />\n                                {this.state.errors.date !== \"\" && (\n                                    <span className=\"error\">\n                                        {this.state.errors.date}\n                                    </span>\n                                )}\n                                <div className=\"form-group\">\n                                    <TimePicker\n                                        start=\"05:00\"\n                                        end=\"23:30\"\n                                        step={30}\n                                        onChange={this.handleTimeChange}\n                                        value={this.state.time}\n                                    />\n                                </div>\n                                {/* <TimePickerPage></TimePickerPage> */}\n                                <button\n                                    onClick={this.getOperator}\n                                    className=\"btn btn-secondary btn-block\"\n                                >\n                                    Get Operators\n                                </button>\n                                <select\n                                    id=\"operator\"\n                                    className=\"custom-select\"\n                                    value={this.state.operator}\n                                    onChange={this.handleOperatorChange}\n                                    disabled={this.state.enable}\n                                    required\n                                >\n                                    {Object.keys(this.state.operatorsList).map(\n                                        (operator, index) =>\n                                            this.state.operatorsList[index][\n                                                \"quantity\"\n                                            ] >= 1 ? (\n                                                <option\n                                                    key={index}\n                                                    value={\n                                                        this.state\n                                                            .operatorsList[\n                                                            index\n                                                        ][\"name\"]\n                                                    }\n                                                >\n                                                    {\n                                                        this.state\n                                                            .operatorsList[\n                                                            index\n                                                        ][\"name\"]\n                                                    }\n                                                </option>\n                                            ) : null\n                                    )}\n                                </select>\n                                {this.state.errors.operator !== \"\" && (\n                                    <span className=\"error\">\n                                        {this.state.errors.operator}\n                                    </span>\n                                )}\n                            </div>\n                            <button\n                                type=\"submit\"\n                                className=\"btn btn-secondary btn-block\"\n                                value=\"Submit\"\n                            >\n                                Book\n                            </button>\n                            {this.state.errors.submit !== \"\" && (\n                                <span className=\"error\">\n                                    {this.state.errors.submit}\n                                </span>\n                            )}\n                            {this.state.success !== \"\" && (\n                                <span className=\"success\">\n                                    {this.state.success}\n                                </span>\n                            )}\n                        </form>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n","import axios from \"axios\";\nconst url = \"http://localhost:5000/app/\";\n// const url = `http://${process.env.REACT_APP_IP_ADDRESS}:5000/app/`;\n\nexport const signUp = (newUser) => {\n  return axios\n    .post(url + \"signup\", {\n      fname: newUser.fname,\n      lname: newUser.lname,\n      email: newUser.email,\n      password: newUser.password,\n    })\n    .then((res) => {\n      console.log(res);\n      return res;\n    })\n    .catch((res) => {\n      console.log(res);\n      let errorMessage = { message: \"new error\" };\n      return errorMessage;\n    });\n};\n\nexport const signIn = (user) => {\n  return axios\n    .post(url + \"signin\", {\n      email: user.email,\n      password: user.password,\n    })\n    .then((res) => {\n      console.log(res);\n      if (res.status === 200) {\n        if (res.data[\"message\"] === \"User logged in successfully\") {\n          localStorage.setItem(\"isLoggedIn\", res.data[\"isLoggedIn\"]);\n          localStorage.setItem(\"fname\", res.data[\"fname\"]);\n          localStorage.setItem(\"lname\", res.data[\"lname\"]);\n          localStorage.setItem(\"email\", res.data[\"email\"]);\n        }\n      }\n      return res;\n    })\n    .catch((res) => {\n      console.log(res);\n      let errorMessage = { message: \"error\" };\n      return errorMessage;\n    });\n};\n","import React, { Component } from \"react\";\nimport { signIn } from \"./AccessApiCalls\";\nimport Navbar from \"./Navbar\";\n\nconst validEmailRegex = RegExp(/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,})+$/);\nconst validateForm = (errors) => {\n    let valid = true;\n    Object.values(errors).forEach((val) => val.length > 0 && (valid = false));\n    return valid;\n};\n\nconst countErrors = (errors) => {\n    let count = 0;\n    Object.values(errors).forEach(\n        (val) => val.length > 0 && (count = count + 1)\n    );\n    return count;\n};\n\nexport default class Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: null,\n            password: null,\n            errors: {\n                email: \"\",\n                password: \"\",\n            },\n        };\n    }\n\n    componentDidMount() {\n        if (localStorage.getItem(\"isLoggedIn\") !== null) {\n            this.props.history.push(\"/home\");\n            // window.location.reload();\n        }\n    }\n\n    goToSignUp = (e) => {\n        e.preventDefault();\n        this.props.history.push(\"/sign-up\");\n    };\n\n    handleChange = (event) => {\n        event.preventDefault();\n        const { name, value } = event.target;\n        let errors = this.state.errors;\n\n        switch (name) {\n            case \"email\":\n                errors.email = validEmailRegex.test(value)\n                    ? \"\"\n                    : \"Email is not valid!\";\n                break;\n            case \"password\":\n                errors.password =\n                    value.length < 8\n                        ? \"Password must be 8 characters long!\"\n                        : \"\";\n                break;\n            default:\n                break;\n        }\n\n        this.setState({ errors, [name]: value });\n    };\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.setState({ formValid: validateForm(this.state.errors) });\n        this.setState({ errorCount: countErrors(this.state.errors) });\n        const userObj = {\n            email: this.state.email,\n            password: this.state.password,\n        };\n        signIn(userObj).then((res) => {\n            if (res.status === 200) {\n                let msg = res.data[\"message\"];\n                if (msg.includes(\"Incorrect email address\")) {\n                    this.setState({\n                        errors: {\n                            email: msg,\n                            password: \"\",\n                        },\n                    });\n                } else if (msg.includes(\"Incorrect password\")) {\n                    this.setState({\n                        errors: {\n                            email: \"\",\n                            password: msg,\n                        },\n                    });\n                } else if (msg.includes(\"No user found\")) {\n                    alert(\"No user found. Try signing up.\");\n                } else {\n                    localStorage.setItem(\"isLoggedIn\", res.data[\"isLoggedIn\"]);\n                    localStorage.setItem(\"fname\", res.data[\"fname\"]);\n                    localStorage.setItem(\"lname\", res.data[\"lname\"]);\n                    localStorage.setItem(\"email\", res.data[\"email\"]);\n                    console.log(localStorage.getItem(\"email\"));\n                    this.props.history.push(\"/home\");\n                }\n            } else {\n                alert(\"Server Error!\");\n            }\n        });\n    };\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <>\n                <Navbar />\n                <div class=\"container\">\n                    <div class=\"jumbotron\">\n                        <form onSubmit={this.handleSubmit} noValidate>\n                            <h3>Sign In</h3>\n                            <div className=\"form-group\">\n                                <label>Email address</label>\n                                <input\n                                    type=\"email\"\n                                    name=\"email\"\n                                    className=\"form-control\"\n                                    placeholder=\"Enter email\"\n                                    onChange={this.handleChange}\n                                    noValidate\n                                    required\n                                />\n                                {errors.email.length > 0 && (\n                                    <span className=\"error\">\n                                        {errors.email}\n                                    </span>\n                                )}\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Password</label>\n                                <input\n                                    type=\"password\"\n                                    name=\"password\"\n                                    className=\"form-control\"\n                                    placeholder=\"Enter password\"\n                                    onChange={this.handleChange}\n                                    noValidate\n                                    required\n                                />\n                                {errors.password.length > 0 && (\n                                    <span className=\"error\">\n                                        {errors.password}\n                                    </span>\n                                )}\n                            </div>\n                            <div className=\"info\">\n                                <small>\n                                    Password must be eight characters in length.\n                                </small>\n                            </div>\n                            <button\n                                type=\"submit\"\n                                className=\"btn btn-secondary btn-block\"\n                            >\n                                Submit\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport { Link, Route, Switch } from \"react-router-dom\";\nimport { signUp } from \"./AccessApiCalls\";\nimport Login from \"./Login\";\n\nconst validEmailRegex = RegExp(/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,})+$/);\nconst nameRegex = RegExp(/^\\w+([.-]?\\w+)+$/);\nconst validateForm = (errors) => {\n    let valid = true;\n    Object.values(errors).forEach((val) => val.length > 0 && (valid = false));\n    return valid;\n};\n\nconst countErrors = (errors) => {\n    let count = 0;\n    Object.values(errors).forEach(\n        (val) => val.length > 0 && (count = count + 1)\n    );\n    return count;\n};\n\nexport default class SignUp extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            formValid: false,\n            fname: null,\n            lname: null,\n            email: null,\n            password: null,\n            repassword: null,\n            errors: {\n                fname: \"\",\n                lname: \"\",\n                email: \"\",\n                password: \"\",\n                repassword: \"\",\n            },\n        };\n    }\n\n    handleChange = (event) => {\n        event.preventDefault();\n        const { name, value } = event.target;\n        let errors = this.state.errors;\n        switch (name) {\n            case \"fname\":\n                errors.fname = nameRegex.test(value)\n                    ? \"\"\n                    : \"No special characters or numbers allowed\";\n                break;\n            case \"lname\":\n                errors.lname = nameRegex.test(value)\n                    ? \"\"\n                    : \"No special characters or numbers allowed\";\n                break;\n            case \"email\":\n                errors.email = validEmailRegex.test(value)\n                    ? \"\"\n                    : \"Email is not valid!\";\n                break;\n            case \"password\":\n                errors.password =\n                    value.length < 8\n                        ? \"Password must be 8 characters long!\"\n                        : \"\";\n                break;\n            case \"repassword\":\n                errors.repassword =\n                    value !== this.state.password\n                        ? \"Password does not match!\"\n                        : \"\";\n                break;\n            default:\n                break;\n        }\n\n        this.setState({ errors, [name]: value });\n    };\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.setState({ formValid: validateForm(this.state.errors) });\n        this.setState({ errorCount: countErrors(this.state.errors) });\n        const data = {\n            fname: this.state.fname,\n            lname: this.state.lname,\n            email: this.state.email,\n            password: this.state.password,\n        };\n        console.log(\"submit\");\n        console.log(data);\n        signUp(data).then((res) => {\n            console.log(res);\n            if (res.status === 200) {\n                if (res.data[\"message\"].includes(\"User added successfully\")) {\n                    this.props.history.push(\"/sign-in\");\n                    // window.location.reload();\n                } else {\n                    this.setState({\n                        errors: {\n                            fname: \"\",\n                            lname: \"\",\n                            email: res.data[\"message\"],\n                            password: \"\",\n                        },\n                    });\n                }\n            } else {\n                alert(\"Server Error!\");\n            }\n        });\n    };\n\n    render() {\n        const { errors, formValid } = this.state;\n        return (\n            <div class=\"container\">\n                <div class=\"jumbotron\">\n                    <form onSubmit={this.handleSubmit} noValidate>\n                        <h3>Sign Up</h3>\n                        <div className=\"form-group\">\n                            <label>First name</label>\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"First name\"\n                                name=\"fname\"\n                                onChange={this.handleChange}\n                                noValidate\n                                required\n                            />\n                            {errors.fname.length > 0 && (\n                                <span className=\"error\">{errors.fname}</span>\n                            )}\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label>Last name</label>\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Last name\"\n                                name=\"lname\"\n                                onChange={this.handleChange}\n                                noValidate\n                                required\n                            />\n                            {errors.lname.length > 0 && (\n                                <span className=\"error\">{errors.lname}</span>\n                            )}\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label>Email address</label>\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Enter email\"\n                                name=\"email\"\n                                onChange={this.handleChange}\n                                noValidate\n                                required\n                            />\n                            {errors.email.length > 0 && (\n                                <span className=\"error\">{errors.email}</span>\n                            )}\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label>Password</label>\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Enter password\"\n                                name=\"password\"\n                                onChange={this.handleChange}\n                                noValidate\n                                required\n                            />\n                            {errors.password.length > 0 && (\n                                <span className=\"error\">{errors.password}</span>\n                            )}\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label>Re-Enter Password</label>\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Re-Enter password\"\n                                name=\"repassword\"\n                                onChange={this.handleChange}\n                                noValidate\n                                required\n                            />\n                            {errors.repassword.length > 0 && (\n                                <span className=\"error\">\n                                    {errors.repassword}\n                                </span>\n                            )}\n                        </div>\n\n                        <button\n                            type=\"submit\"\n                            className=\"btn btn-primary btn-block\"\n                        >\n                            Sign Up\n                        </button>\n                        {this.state.errorCount !== null ? (\n                            <p className=\"form-status\">\n                                Form is {formValid ? \"valid ✅\" : \"invalid ❌\"}\n                            </p>\n                        ) : (\n                            \"Form not submitted\"\n                        )}\n                        <p className=\"forgot-password text-right\">\n                            <Link className=\"nav-link\" to={\"/sign-in\"}>\n                                Already registered? Sign in\n                            </Link>\n                            <Switch>\n                                <Route path=\"/sign-in\" component={Login} />\n                            </Switch>\n                        </p>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\n\nclass Logout extends Component {\n\n    componentDidMount() {\n        console.log(localStorage.getItem('isLoggedIn'))\n        localStorage.removeItem('isLoggedIn')\n        localStorage.removeItem('email')\n        localStorage.removeItem('fname')\n        localStorage.removeItem('lname')\n        this.props.history.push('/sign-in');\n    }\n\n    render() {\n        return (\n            <div>\n                Logged Out\n            </div>\n        );\n    }\n}\n\nexport default Logout","import React, { Component } from \"react\";\nimport { getbookings } from \"./BookingApiCalls\";\nimport { deletebooking } from \"./BookingApiCalls\";\nimport Navbar from \"./Navbar\";\n\nexport default class ViewBookings extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            bookings: [],\n            message: \"\",\n            success: \"\",\n            present: false,\n        };\n        this.handleSearchKeyUp = this.keyUpHandler.bind();\n        this.deleteBooking = this.deleteBooking.bind(this);\n    }\n\n    deleteBooking(e) {\n        console.log(e.target.value);\n        var data = e.target.value;\n        data = data.split(\",\");\n        const object = {\n            email: localStorage.getItem(\"email\"),\n            operator: data[0],\n            source: data[1],\n            destination: data[2],\n            date: data[3],\n        };\n        console.log(object);\n        deletebooking(object).then((res) => {\n            if (res.status === 200) {\n                if (res.data[\"message\"] === \"No bookings found\") {\n                    this.setState({\n                        message: res.data[\"message\"],\n                        present: false,\n                    });\n                } else {\n                    console.log(this.state.bookings);\n                    this.setState({\n                        success: res.data[\"message\"],\n                    });\n                    this.props.history.push(\"/home\");\n                }\n            } else {\n                this.setState({\n                    message: \"\",\n                    present: false,\n                });\n            }\n        });\n    }\n\n    keyUpHandler() {\n        var input, filter, table, tr, td, i, txtValue;\n        input = document.getElementById(\"myInput\");\n        filter = input.value.toUpperCase();\n        table = document.getElementById(\"bookings\");\n        tr = table.getElementsByTagName(\"tr\");\n        console.log(tr);\n        for (i = 0; i < tr.length; i++) {\n            td = tr[i].getElementsByTagName(\"td\")[1];\n            if (td) {\n                txtValue = td.textContent || td.innerText;\n                if (txtValue.toUpperCase().indexOf(filter) > -1) {\n                    tr[i].style.display = \"\";\n                } else {\n                    tr[i].style.display = \"none\";\n                }\n            }\n        }\n    }\n\n    componentDidMount() {\n        if (localStorage.getItem(\"isLoggedIn\") === null) {\n            this.props.history.push(\"/\");\n        }\n        const booking = {};\n        getbookings(booking).then((res) => {\n            if (res.status === 200) {\n                if (res.data === null) {\n                    console.log(\"Test1\");\n                    this.setState({\n                        message: \"\",\n                        present: false,\n                    });\n                } else if (res.data[\"message\"] === \"No bookings found\") {\n                    console.log(\"Test1\");\n                    this.setState({\n                        message: res.data[\"message\"],\n                        present: false,\n                    });\n                } else {\n                    this.setState({\n                        message: \"Data Present\",\n                        bookings: res.data,\n                        present: true,\n                    });\n                }\n            } else {\n                console.log(\"Test2\");\n                this.setState({\n                    message: \"\",\n                    present: false,\n                });\n            }\n        });\n    }\n\n    render() {\n        return (\n            <>\n                <Navbar />\n                <div class=\"container\">\n                    <br />\n                    <br />\n                    <br />\n                    {/* <table id=\"bookings1\" hidden={this.state.present}><tr>No bookings available</tr></table> */}\n                    <input\n                        type=\"text\"\n                        id=\"myInput\"\n                        onKeyUp={this.handleSearchKeyUp}\n                        placeholder=\"Search for names..\"\n                        title=\"Type in a operator name\"\n                    />\n                    {this.state.success !== \"\" && (\n                        <span className=\"success\">{this.state.success}</span>\n                    )}\n\n                    <table id=\"bookings\" hidden={!this.state.present}>\n                        <tbody>\n                            <tr>\n                                <th>Sr No.</th>\n                                <th>Operator</th>\n                                <th>Source</th>\n                                <th>Destination</th>\n                                <th>Date of Journey</th>\n                                <th>Actions</th>\n                            </tr>\n                            {Object.keys(this.state.bookings).map(\n                                (booking, index) => (\n                                    <tr>\n                                        <td>{index}</td>\n                                        <td\n                                            key={\n                                                this.state.bookings[index][\n                                                    \"operator\"\n                                                ]\n                                            }\n                                            value={\n                                                this.state.bookings[index][\n                                                    \"operator\"\n                                                ]\n                                            }\n                                        >\n                                            {\n                                                this.state.bookings[index][\n                                                    \"operator\"\n                                                ]\n                                            }\n                                        </td>\n                                        <td>\n                                            {\n                                                this.state.bookings[index][\n                                                    \"source\"\n                                                ]\n                                            }\n                                        </td>\n                                        <td>\n                                            {\n                                                this.state.bookings[index][\n                                                    \"destination\"\n                                                ]\n                                            }\n                                        </td>\n                                        <td>\n                                            {this.state.bookings[index][\n                                                \"date\"\n                                            ].substring(0, 10)}\n                                        </td>\n                                        <td>\n                                            <button\n                                                value={\n                                                    this.state.bookings[index][\n                                                        \"operator\"\n                                                    ] +\n                                                    \",\" +\n                                                    this.state.bookings[index][\n                                                        \"source\"\n                                                    ] +\n                                                    \",\" +\n                                                    this.state.bookings[index][\n                                                        \"destination\"\n                                                    ] +\n                                                    \",\" +\n                                                    this.state.bookings[index][\n                                                        \"date\"\n                                                    ]\n                                                }\n                                                onClick={this.deleteBooking}\n                                            >\n                                                Cancel Booking\n                                            </button>\n                                        </td>\n                                    </tr>\n                                )\n                            )}\n                        </tbody>\n                    </table>\n                </div>\n            </>\n        );\n    }\n}\n","import { Component } from \"react\";\nimport Navbar from \"./Navbar\";\n\nclass Error extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <>\n                <Navbar />\n                <div class=\"container\">\n                    <h3 style={{ color: \"red\" }}>Page doesn't exist</h3>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Error;\n","import React from \"react\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n// import logo from './static/bus.png';\nimport Home from \"./components/HomePage\";\nimport Login from \"./components/Login\";\nimport SignUp from \"./components/SignUp\";\nimport Logout from \"./components/Logout\";\nimport ViewBookings from \"./components/ViewBookings\";\nimport Navbar from \"./components/Navbar\";\nimport Error from \"./components/Error\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Router>\n                <Navbar />\n                <Switch>\n                    <Route exact path=\"/\" component={Login} />\n                    <Route\n                        exact\n                        path=\"/view-bookings\"\n                        component={ViewBookings}\n                    />\n                    <Route exact path=\"/home\" component={Home} />\n                    <Route exact path=\"/sign-in\" component={Login} />\n                    <Route exact path=\"/sign-up\" component={SignUp} />\n                    <Route exact path=\"/logout\" component={Logout} />\n                    <Route path=\"/\" component={Error} />\n                </Switch>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}