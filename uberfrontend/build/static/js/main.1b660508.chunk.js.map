{"version":3,"sources":["components/BookingApiCalls.js","components/Navbar.js","components/MarkerComponent.js","components/HomePage.js","components/Login.js","components/AccessApiCalls.js","components/SignUp.js","components/Logout.js","components/ViewBookingsNew.js","components/ViewBookings.js","components/Error.js","App.js","reportWebVitals.js","index.js"],"names":["url","getbookings","booking","axios","post","email","localStorage","getItem","then","res","console","log","catch","deletebooking","source","destination","date","operator","bustime","Navbar","props","state","show","toggleMenu","bind","this","setState","afterLogin","class","className","to","src","alt","width","height","fname","type","onClick","style","display","beforeLogin","isLoggedIn","Component","MarkerComponent","text","HomePage","operatorsList","time","enable","success","noTiketsMessage","marker_path","source_lat","source_lng","dest_lat","dest_lng","google","flightPath","errors","submit","Geocode","setApiKey","handleDateChange","getOperator","handleSourceChange","handleDestinationChange","handleOperatorChange","handleSubmit","handleTimeChange","history","push","event","target","value","maps","Polyline","path","strokeWeight","setMap","sourceHandler","Date","preventDefault","getoperator","status","data","size","Object","keys","length","handleDestinationMarker","key","e","defaultBooking","addbooking","error","setTimeout","fromAddress","response","results","geometry","location","lat","lng","geodesic","strokeColor","strokeOpacity","map","dest","setPath","destinationHandler","onSubmit","onChange","handleSourceMarker","required","selected","minDate","moment","toDate","id","disabled","index","bootstrapURLKeys","defaultCenter","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","defaultZoom","validEmailRegex","RegExp","validateForm","valid","values","forEach","val","countErrors","count","Login","goToSignUp","handleChange","name","test","password","formValid","errorCount","user","userObj","setItem","message","msg","includes","alert","noValidate","placeholder","nameRegex","SignUp","lname","repassword","newUser","component","Logout","removeItem","ViewBookings","bookings","present","handleSearchKeyUp","keyUpHandler","deleteBooking","split","object","filter","tr","td","i","document","getElementById","toUpperCase","getElementsByTagName","textContent","innerText","indexOf","onKeyUp","title","href","substring","Error","color","App","exact","ViewBookingsNew","Home","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1b660508.chunk.js","sourcesContent":["import axios from \"axios\";\nconst url = \"/app/\";\n//const url = `http://${process.env.REACT_APP_IP_ADDRESS}:5000/app/`;\n\nexport const getoperator = (booking) => {\n    return axios\n        .post(url + \"getoperator\", {\n            source: booking.source,\n            destination: booking.destination,\n            date: booking.date,\n        })\n        .then((res) => {\n            console.log(res);\n            return res;\n        })\n        .catch((res) => {\n            console.log(res);\n            return res;\n        });\n};\n\nexport const addbooking = (booking) => {\n    return axios\n        .post(url + \"addbooking\", {\n            email: booking.email,\n            source: booking.source,\n            destination: booking.destination,\n            date: booking.date,\n            operator: booking.operator,\n        })\n        .then((res) => {\n            console.log(res);\n            return res;\n        })\n        .catch((res) => {\n            console.log(res);\n        });\n};\n\nexport const getbookings = (booking) => {\n    return axios\n        .post(url + \"getbookings\", {\n            email: localStorage.getItem(\"email\"),\n        })\n        .then((res) => {\n            console.log(\"Try\");\n            console.log(res);\n            return res;\n        })\n        .catch((res) => {\n            console.log(\"Catch\");\n            console.log(res);\n        });\n};\n\nexport const deletebooking = (booking) => {\n    return axios\n        .post(url + \"delete\", {\n            email: localStorage.getItem(\"email\"),\n            source: booking.source,\n            destination: booking.destination,\n            date: booking.date,\n            operator: booking.operator,\n            bustime: booking.bustime,\n        })\n        .then((res) => {\n            console.log(res);\n            return res;\n        })\n        .catch((res) => {\n            console.log(res);\n        });\n};\n","import { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Navbar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            show: false,\n        };\n        this.toggleMenu = this.toggleMenu.bind(this);\n\n        console.log(this.state.show);\n        // this.toggleMenu = this.toggleMenu.bind(this);\n    }\n    toggleMenu() {\n        this.setState({ show: !this.state.show });\n    }\n    render() {\n        const afterLogin = (\n            <nav class=\"navbar navbar-expand-md navbar-dark bg-dark mb-3 fixed-top\">\n                <div className=\"container-fluid\">\n                    <Link className=\"navbar-brand mr-3\" to={\"/home\"}>\n                        <img\n                            src=\"static/bus.png\"\n                            alt=\"\"\n                            width=\"50px\"\n                            height=\"50px\"\n                        />{\" \"}\n                    </Link>\n                    <h3 className=\"navbar-brand mr-3\">\n                        {\" \"}\n                        Hi {localStorage.fname}\n                    </h3>\n                    <button\n                        type=\"button\"\n                        class=\"navbar-toggler\"\n                        onClick={this.toggleMenu}\n                    >\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <div\n                        style={\n                            this.state.show\n                                ? { display: \"block\" }\n                                : { display: \"none\" }\n                        }\n                        className=\"collapse navbar-collapse\"\n                    >\n                        <div className=\"navbar-nav ml-auto\">\n                            <Link\n                                className=\"nav-item nav-link\"\n                                to={\"/view-bookings\"}\n                            >\n                                View Bookings\n                            </Link>\n\n                            <Link className=\"nav-item nav-link\" to={\"/home\"}>\n                                Home\n                            </Link>\n\n                            <Link className=\"nav-item nav-link\" to={\"/logout\"}>\n                                Logout\n                            </Link>\n                        </div>\n                    </div>\n                </div>\n            </nav>\n        );\n\n        const beforeLogin = (\n            <nav class=\"navbar navbar-expand-md navbar-dark bg-dark mb-3 fixed-top\">\n                <div className=\"container-fluid\">\n                    <Link className=\"navbar-brand mr-3\" to={\"/home\"}>\n                        <img\n                            src=\"static/bus.png\"\n                            alt=\"\"\n                            width=\"50px\"\n                            height=\"50px\"\n                        />{\" \"}\n                    </Link>\n                    <button\n                        type=\"button\"\n                        className=\"navbar-toggler\"\n                        onClick={this.toggleMenu}\n                    >\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <div\n                        style={\n                            this.state.show\n                                ? { display: \"block\" }\n                                : { display: \"none\" }\n                        }\n                        className=\"collapse navbar-collapse\"\n                    >\n                        <div className=\"navbar-nav ml-auto \">\n                            <Link className=\"nav-item nav-link\" to={\"/sign-in\"}>\n                                Login\n                            </Link>\n\n                            <Link className=\"nav-item nav-link\" to={\"/sign-up\"}>\n                                Sign up\n                            </Link>\n                        </div>\n                    </div>\n                </div>\n            </nav>\n        );\n\n        return <>{localStorage.isLoggedIn ? afterLogin : beforeLogin}</>;\n    }\n}\n\nexport default Navbar;\n","import \"../App.css\";\nimport React, { Component } from \"react\";\nexport default class MarkerComponent extends Component {\n    render() {\n        return (\n            <div>\n                <span className=\"pin-text\">{this.props.text}</span>\n                <div className=\"pin\"></div>\n            </div>\n        );\n    }\n}\n//dummy\n","import React, { Component } from \"react\";\n// import TimePickerPage from \"./TimePickerPage\";\nimport DatePicker from \"react-datepicker\";\nimport TimePicker from \"react-bootstrap-time-picker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"rc-time-picker/assets/index.css\";\nimport moment from \"moment\";\nimport { addbooking, getoperator } from \"./BookingApiCalls\";\nimport Navbar from \"./Navbar\";\nimport GoogleMapReact from \"google-map-react\";\nimport Geocode from \"react-geocode\";\nimport { debounce } from \"lodash\";\nimport MarkerComponent from \"./MarkerComponent\";\nimport \"../App.css\";\nimport {\n    withGoogleMap,\n    GoogleMap,\n    Marker,\n    InfoWindow,\n    Polyline,\n} from \"react-google-maps\";\n\nvar currDate = \"\";\nvar currTime = \"\";\nexport default class HomePage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            source: \"Select Source\",\n            destination: \"Select Destination\",\n            operator: \"\",\n            operatorsList: [],\n            date: currDate,\n            time: 0,\n            enable: true,\n            success: \"\",\n            noTiketsMessage: \"The Bus is full\",\n            marker_path: [],\n            source_lat: 0,\n            source_lng: 0,\n            dest_lat: 0,\n            dest_lng: 0,\n            google: 0,\n            flightPath: 0,\n            errors: {\n                source: \"\",\n                destination: \"\",\n                operator: \"\",\n                date: \"\",\n                submit: \"\",\n            },\n        };\n        Geocode.setApiKey(\"AIzaSyArSiBGE5n217Fcd9N59Y6yIynN6gyVSzM\");\n        this.handleDateChange = this.handleDateChange.bind(this);\n        this.getOperator = this.getOperator.bind(this);\n        this.handleSourceChange = this.handleSourceChange.bind(this);\n        this.handleDestinationChange = this.handleDestinationChange.bind(this);\n        this.handleOperatorChange = this.handleOperatorChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleTimeChange = this.handleTimeChange.bind(this);\n    }\n\n    componentDidMount() {\n        if (localStorage.getItem(\"isLoggedIn\") === null) {\n            this.props.history.push(\"/\");\n        }\n    }\n\n    handleTimeChange(time) {\n        console.log(time); // <- prints \"3600\" if \"01:00\" is picked\n        this.setState({ time });\n    }\n    handleSourceChange(event) {\n        this.setState({\n            source: event.target.value,\n\n            date: currDate,\n            operator: \"\",\n            errors: {\n                source: \"\",\n                destination: \"\",\n                submit: \"\",\n            },\n        });\n        // this.handleSourceMarker(event.target.value);\n    }\n    handleSourceMarker(src) {\n        console.log(\"inside\");\n\n        var flightPath = new this.state.google.maps.Polyline({\n            path: [],\n            strokeWeight: 0,\n        });\n\n        flightPath.setMap(null);\n\n        if (this.state.flightPath) {\n            // this.state.flightPath.setMap(null);\n            // this.state.flightPath.strokeWeight = 0;\n            // this.state.flightPath.setPath([]);\n            // this.state.flightPath = null;\n            this.setState({\n                flightPath: flightPath,\n            });\n        }\n        if (src) {\n            this.sourceHandler(src);\n        }\n    }\n\n    handleDateChange(value) {\n        if (this.state.source === \"Select Source\") {\n            this.setState({\n                errors: {\n                    source: \"Source cannot be empty\",\n                    destination: \"\",\n                },\n            });\n        } else if (this.state.destination === \"Select Destination\") {\n            this.setState({\n                errors: {\n                    source: \"\",\n                    destination: \"Destionation cannot be empty\",\n                },\n            });\n        } else {\n            console.log(\"Value\");\n            console.log(value);\n            this.setState({\n                date: new Date(value),\n                operatorsList: [],\n                operator: \"\",\n                errors: {\n                    source: \"\",\n                    destination: \"\",\n                },\n            });\n            console.log(\"Check\");\n            console.log(this.state.date);\n        }\n    }\n\n    getOperator(event) {\n        event.preventDefault();\n        console.log(\"Get Operator\");\n        console.log(this.state.date);\n        const booking = {\n            source: this.state.source,\n            destination: this.state.destination,\n            date: this.state.date,\n        };\n        getoperator(booking).then((res) => {\n            if (res.status === 200) {\n                if (\n                    res.data[\"message\"] ===\n                        \"No operators has seats available\" ||\n                    res.data[\"message\"] === \"No operators found\"\n                ) {\n                    console.log(\"Operator data1\");\n                    console.log(res.data);\n                    this.setState({\n                        operatorsList: [],\n                        enable: true,\n                        errors: {\n                            source: \"\",\n                            destination: \"\",\n                            operator:\n                                \"No operators has seats available. Select another date.\",\n                            submit: \"\",\n                        },\n                    });\n                } else {\n                    console.log(\"Operator data2\");\n                    console.log(res.data);\n                    let size = Object.keys(res.data).length;\n                    console.log(size);\n                    if (size < 1) {\n                        this.setState({\n                            operatorsList: [],\n                            enable: true,\n                            errors: {\n                                operator: \"No operator found\",\n                                submit: \"\",\n                            },\n                        });\n                    } else {\n                        this.setState({\n                            enable: false,\n                        });\n                        this.setState({\n                            operatorsList: res.data,\n                            operator:\n                                res.data[0][\"name\"] +\n                                \"/\" +\n                                res.data[0][\"bustime\"],\n\n                            errors: {\n                                source: \"\",\n                                destination: \"\",\n                                operator: \"\",\n                            },\n                        });\n                    }\n                }\n            }\n        });\n    }\n\n    handleDestinationChange(event) {\n        if (this.state.source === \"Select Source\") {\n            this.setState({\n                errors: {\n                    source: \"Source cannot be empty\",\n                    destination: \"\",\n                },\n            });\n        } else if (this.state.source === event.target.value) {\n            this.setState({\n                errors: {\n                    source: \"\",\n                    destination: \"Destination cannot be same as source\",\n                },\n            });\n        } else {\n            this.setState({\n                destination: event.target.value,\n                date: currDate,\n                operator: \"\",\n                errors: {\n                    source: \"\",\n                    destination: \"\",\n                },\n            });\n        }\n        this.handleDestinationMarker(event.target.value);\n    }\n\n    handleOperatorChange(event) {\n        console.log(event.target.key);\n        this.setState({ operator: event.target.value });\n        console.log(\"Operator Change:\", this.state.operator);\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        console.log(currDate);\n        console.log(this.state.date);\n        console.log(this.state.operator);\n\n        const defaultBooking = {\n            source: \"Select Source\",\n            destination: \"Select Destination\",\n            date: \"\",\n            operator: \"\",\n        };\n        if (\n            this.state.source === defaultBooking.source ||\n            this.state.destination === defaultBooking.destination ||\n            this.state.date === defaultBooking.date ||\n            this.state.operator === defaultBooking.operator\n        ) {\n            this.setState({\n                errors: {\n                    submit: \"Select all the required fields\",\n                },\n            });\n        } else {\n            const booking = {\n                email: localStorage.getItem(\"email\"),\n                source: this.state.source,\n                destination: this.state.destination,\n                date: this.state.date,\n                operator: this.state.operator,\n            };\n            console.log(booking);\n            addbooking(booking).then((res) => {\n                if (res.status === 200) {\n                    if (res.data[\"message\"] === \"Operator not available\") {\n                        this.setState({\n                            error: {\n                                source: \"\",\n                                destination: \"\",\n                                operator: res.data[\"message\"],\n                                operatorsList: [],\n                                submit: res.data[\"message\"],\n                            },\n                        });\n                    } else {\n                        let size = Object.keys(res.data).length;\n                        console.log(size);\n                        if (size < 1) {\n                            this.setState({\n                                error: {\n                                    source: \"\",\n                                    destination: \"\",\n                                    operator: \"\",\n                                    operatorsList: [],\n                                    submit: \"No buses found\",\n                                },\n                            });\n                        }\n                        this.setState({\n                            source: \"Select Source\",\n                            destination: \"Select Destination\",\n                            operator: \"\",\n                            operatorsList: [],\n                            date: currDate,\n                            enable: true,\n                        });\n                        setTimeout(\n                            () =>\n                                this.setState({\n                                    success: \"Booking done successfully\",\n                                }),\n                            1000\n                        );\n                    }\n                }\n            });\n        }\n    }\n    // method() {\n    //     debounce((e) => {\n    //         console.log(\"Test 2\");\n    //         Geocode.fromAddress(e).then(\n    //             (response) => {\n    //                 const { lat, lng } = (this.state.marker_path[0] =\n    //                     response.results[0].geometry.location);\n    //                 this.setState({\n    //                     source_lat: lat,\n    //                     source_lng: lng,\n    //                     marker_path: this.state.marker_path,\n    //                 });\n    //                 // setSourceLat(lat);\n    //                 // setSourceLng(lng);\n    //                 // setMarkerPath(marker_path);\n    //                 if (this.state.marker_path.length > 1) {\n    //                     var flightPath = new this.state.google.maps.Polyline({\n    //                         path: this.state.marker_path,\n    //                         geodesic: true,\n    //                         strokeColor: \"red\",\n    //                         strokeOpacity: 1,\n    //                         strokeWeight: 2,\n    //                     });\n\n    //                     flightPath.setMap(this.state.google.map);\n    //                     this.setState({\n    //                         flightPath: flightPath,\n    //                     });\n    //                 }\n    //             },\n    //             (error) => {\n    //                 console.error(error);\n    //             }\n    //         );\n    //     });\n    // }\n    // sourceHandler = this.method.bind(this);\n\n    // handleSourceMarker = (src) => {\n    //     if (this.state.flightPath) {\n    //         this.state.lightPath.setMap(null);\n    //     }\n    //     if (src) {\n    //         this.sourceHandler(src);\n    //     }\n    // };\n\n    // method2() {\n    //     debounce((e) => {\n    //         Geocode.fromAddress(e).then(\n    //             (response) => {\n    //                 const { lat, lng } = (this.state.marker_path[1] =\n    //                     response.results[0].geometry.location);\n    //                 this.setState({\n    //                     source_lat: lat,\n    //                     source_lng: lng,\n    //                     marker_path: this.state.marker_path,\n    //                 });\n    //                 if (this.state.marker_path.length > 1) {\n    //                     var flightPath = new this.state.google.maps.Polyline({\n    //                         path: this.state.marker_path,\n    //                         geodesic: true,\n    //                         strokeColor: \"red\",\n    //                         strokeOpacity: 1,\n    //                         strokeWeight: 2,\n    //                     });\n\n    //                     this.state.flightPath.setMap(this.state.google.map);\n    //                     this.setState({\n    //                         flightPath: flightPath,\n    //                     });\n    //                 }\n    //             },\n    //             (error) => {\n    //                 console.error(error);\n    //             }\n    //         );\n    //     });\n    // }\n    sourceHandler(e) {\n        Geocode.fromAddress(e).then(\n            (response) => {\n                const { lat, lng } = (this.state.marker_path[0] =\n                    response.results[0].geometry.location);\n                this.setState({\n                    source_lat: lat,\n                    source_lng: lng,\n                    marker_path: this.state.marker_path,\n                });\n                if (this.state.marker_path.length > 1) {\n                    var flightPath = new this.state.google.maps.Polyline({\n                        path: this.state.marker_path,\n                        geodesic: true,\n                        strokeColor: \"red\",\n                        strokeOpacity: 1,\n                        strokeWeight: 3,\n                    });\n\n                    flightPath.setMap(this.state.google.map);\n                    this.setState({\n                        flightPath: flightPath,\n                    });\n                }\n            },\n            (error) => {\n                console.error(error);\n            }\n        );\n    }\n\n    destinationHandler(e) {\n        Geocode.fromAddress(e).then(\n            (response) => {\n                const { lat, lng } = (this.state.marker_path[1] =\n                    response.results[0].geometry.location);\n                this.setState({\n                    dest_lat: lat,\n                    dest_lng: lng,\n                    marker_path: this.state.marker_path,\n                });\n                if (this.state.marker_path.length > 1) {\n                    var flightPath = new this.state.google.maps.Polyline({\n                        path: this.state.marker_path,\n                        geodesic: true,\n                        strokeColor: \"red\",\n                        strokeOpacity: 1,\n                        strokeWeight: 2,\n                    });\n\n                    flightPath.setMap(this.state.google.map);\n                    this.setState({\n                        flightPath: flightPath,\n                    });\n                }\n            },\n            (error) => {\n                console.error(error);\n            }\n        );\n    }\n\n    handleDestinationMarker(dest) {\n        if (this.state.flightPath) {\n            this.state.flightPath.setMap(null);\n            this.state.flightPath.setPath([]);\n            this.state.flightPath = null;\n        }\n\n        if (dest) {\n            this.destinationHandler(dest);\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <Navbar />\n                <div class=\"container\">\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <div class=\"jumbotron\">\n                                <form onSubmit={this.handleSubmit}>\n                                    <h3>Bus Ticket Booking</h3>\n                                    <div className=\"form-group\">\n                                        <select\n                                            className=\"custom-select\"\n                                            value={this.state.source}\n                                            onChange={(e) => {\n                                                // setAlertVisible({ isOpen: false });\n\n                                                this.handleSourceChange(e);\n                                                this.handleSourceMarker(\n                                                    e.target.value\n                                                );\n                                            }}\n                                            required\n                                        >\n                                            <option value=\"destination\">\n                                                Select Source\n                                            </option>\n                                            <option value=\"Boston\">\n                                                Boston\n                                            </option>\n                                            <option value=\"New York\">\n                                                New York\n                                            </option>\n                                            <option value=\"Pittsburgh\">\n                                                Pittsburgh\n                                            </option>\n                                            <option value=\"Cambridge\">\n                                                Cambridge\n                                            </option>\n                                            <option value=\"Brookline\">\n                                                Brookline\n                                            </option>\n                                        </select>\n                                        {this.state.errors.source !== \"\" && (\n                                            <span className=\"error\">\n                                                {this.state.errors.source}\n                                            </span>\n                                        )}\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <select\n                                            className=\"custom-select\"\n                                            value={this.state.destination}\n                                            onChange={(e) => {\n                                                this.handleDestinationChange(e);\n                                                this.handleDestinationMarker(\n                                                    e.target.value\n                                                );\n                                            }}\n                                            required\n                                        >\n                                            <option value=\"destination\">\n                                                Select Destination\n                                            </option>\n                                            <option value=\"Boston\">\n                                                Boston\n                                            </option>\n                                            <option value=\"New York\">\n                                                New York\n                                            </option>\n                                            <option value=\"Pittsburgh\">\n                                                Pittsburgh\n                                            </option>\n                                            <option value=\"Cambridge\">\n                                                Cambridge\n                                            </option>\n                                            <option value=\"Brookline\">\n                                                Brookline\n                                            </option>\n                                        </select>\n                                        {this.state.errors.destination !==\n                                            \"\" && (\n                                            <span className=\"error\">\n                                                {this.state.errors.destination}\n                                            </span>\n                                        )}\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <DatePicker\n                                            className=\"custom-select\"\n                                            value={this.state.date}\n                                            selected={this.state.date}\n                                            onChange={this.handleDateChange}\n                                            minDate={moment().toDate()}\n                                            required\n                                        />\n                                        {this.state.errors.date !== \"\" && (\n                                            <span className=\"error\">\n                                                {this.state.errors.date}\n                                            </span>\n                                        )}\n                                        {/* <div className=\"form-group\">\n                                    <TimePicker\n                                        start=\"05:00\"\n                                        end=\"23:30\"\n                                        step={30}\n                                        onChange={this.handleTimeChange}\n                                        value={this.state.time}\n                                    />\n                                </div> */}\n                                        {/* <TimePickerPage></TimePickerPage> */}\n                                        <button\n                                            onClick={this.getOperator}\n                                            className=\"btn btn-secondary btn-block\"\n                                        >\n                                            Get Operators\n                                        </button>\n                                        <select\n                                            id=\"operator\"\n                                            className=\"custom-select\"\n                                            value={this.state.operator}\n                                            onChange={this.handleOperatorChange}\n                                            disabled={this.state.enable}\n                                            required\n                                        >\n                                            {Object.keys(\n                                                this.state.operatorsList\n                                            ).map((operator, index) =>\n                                                this.state.operatorsList[index][\n                                                    \"quantity\"\n                                                ] >= 1 ? (\n                                                    <option\n                                                        key={index}\n                                                        value={\n                                                            this.state\n                                                                .operatorsList[\n                                                                index\n                                                            ][\"name\"] +\n                                                            \"/\" +\n                                                            this.state\n                                                                .operatorsList[\n                                                                index\n                                                            ][\"bustime\"]\n                                                        }\n                                                    >\n                                                        {this.state\n                                                            .operatorsList[\n                                                            index\n                                                        ][\"name\"] +\n                                                            \" \" +\n                                                            this.state\n                                                                .operatorsList[\n                                                                index\n                                                            ][\"bustime\"]}\n                                                    </option>\n                                                ) : null\n                                            )}\n                                        </select>\n                                        {this.state.errors.operator !== \"\" && (\n                                            <span className=\"error\">\n                                                {this.state.errors.operator}\n                                            </span>\n                                        )}\n                                    </div>\n                                    <button\n                                        type=\"submit\"\n                                        className=\"btn btn-secondary btn-block\"\n                                        value=\"Submit\"\n                                    >\n                                        Book\n                                    </button>\n                                    {this.state.errors.submit !== \"\" && (\n                                        <span className=\"error\">\n                                            {this.state.errors.submit}\n                                        </span>\n                                    )}\n                                    {this.state.success !== \"\" && (\n                                        <span className=\"success\">\n                                            {this.state.success}\n                                        </span>\n                                    )}\n                                </form>\n                            </div>\n                        </div>\n                        <div class=\"col-md-6\">\n                            {/* <div class=\"jumbotron\"></div> */}\n                            <GoogleMapReact\n                                bootstrapURLKeys={{\n                                    key:\n                                        \"AIzaSyArSiBGE5n217Fcd9N59Y6yIynN6gyVSzM\",\n                                }}\n                                defaultCenter={{\n                                    lat: 42.361145,\n                                    lng: -71.057083,\n                                }}\n                                yesIWantToUseGoogleMapApiInternals\n                                onGoogleApiLoaded={(e) =>\n                                    this.setState({ google: e })\n                                }\n                                defaultZoom={10}\n                            >\n                                {this.state.source &&\n                                    this.state.source_lat &&\n                                    this.state.source_lng && (\n                                        <MarkerComponent\n                                            lat={this.state.source_lat}\n                                            lng={this.state.source_lng}\n                                            text=\"S\"\n                                        />\n                                    )}\n                                {this.state.destination &&\n                                    this.state.dest_lat &&\n                                    this.state.dest_lng && (\n                                        <MarkerComponent\n                                            lat={this.state.dest_lat}\n                                            lng={this.state.dest_lng}\n                                            text=\"D\"\n                                        />\n                                    )}\n                            </GoogleMapReact>\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport { signIn } from \"./AccessApiCalls\";\nimport Navbar from \"./Navbar\";\n\nconst validEmailRegex = RegExp(/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,})+$/);\nconst validateForm = (errors) => {\n    let valid = true;\n    Object.values(errors).forEach((val) => val.length > 0 && (valid = false));\n    return valid;\n};\n\nconst countErrors = (errors) => {\n    let count = 0;\n    Object.values(errors).forEach(\n        (val) => val.length > 0 && (count = count + 1)\n    );\n    return count;\n};\n\nexport default class Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: null,\n            password: null,\n            errors: {\n                email: \"\",\n                password: \"\",\n            },\n        };\n    }\n\n    componentDidMount() {\n        if (localStorage.getItem(\"isLoggedIn\") !== null) {\n            this.props.history.push(\"/home\");\n            // window.location.reload();\n        }\n    }\n\n    goToSignUp = (e) => {\n        e.preventDefault();\n        this.props.history.push(\"/sign-up\");\n    };\n\n    handleChange = (event) => {\n        event.preventDefault();\n        const { name, value } = event.target;\n        let errors = this.state.errors;\n\n        switch (name) {\n            case \"email\":\n                errors.email = validEmailRegex.test(value)\n                    ? \"\"\n                    : \"Email is not valid!\";\n                break;\n            case \"password\":\n                errors.password =\n                    value.length < 8\n                        ? \"Password must be 8 characters long!\"\n                        : \"\";\n                break;\n            default:\n                break;\n        }\n\n        this.setState({ errors, [name]: value });\n    };\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.setState({ formValid: validateForm(this.state.errors) });\n        this.setState({ errorCount: countErrors(this.state.errors) });\n        const userObj = {\n            email: this.state.email,\n            password: this.state.password,\n        };\n        signIn(userObj).then((res) => {\n            if (res.status === 200) {\n                let msg = res.data[\"message\"];\n                if (msg.includes(\"Incorrect email address\")) {\n                    this.setState({\n                        errors: {\n                            email: msg,\n                            password: \"\",\n                        },\n                    });\n                } else if (msg.includes(\"Incorrect password\")) {\n                    this.setState({\n                        errors: {\n                            email: \"\",\n                            password: msg,\n                        },\n                    });\n                } else if (msg.includes(\"No user found\")) {\n                    alert(\"No user found. Try signing up.\");\n                } else {\n                    localStorage.setItem(\"isLoggedIn\", res.data[\"isLoggedIn\"]);\n                    localStorage.setItem(\"fname\", res.data[\"fname\"]);\n                    localStorage.setItem(\"lname\", res.data[\"lname\"]);\n                    localStorage.setItem(\"email\", res.data[\"email\"]);\n                    console.log(localStorage.getItem(\"email\"));\n                    this.props.history.push(\"/home\");\n                }\n            } else {\n                alert(\"Server Error!\");\n            }\n        });\n    };\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <>\n                <Navbar />\n                <div class=\"container\">\n                    <div class=\"jumbotron\">\n                        <form onSubmit={this.handleSubmit} noValidate>\n                            <h3>Sign In</h3>\n                            <div className=\"form-group\">\n                                <label>Email address</label>\n                                <input\n                                    type=\"email\"\n                                    name=\"email\"\n                                    className=\"form-control\"\n                                    placeholder=\"Enter email\"\n                                    onChange={this.handleChange}\n                                    noValidate\n                                    required\n                                />\n                                {errors.email.length > 0 && (\n                                    <span className=\"error\">\n                                        {errors.email}\n                                    </span>\n                                )}\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Password</label>\n                                <input\n                                    type=\"password\"\n                                    name=\"password\"\n                                    className=\"form-control\"\n                                    placeholder=\"Enter password\"\n                                    onChange={this.handleChange}\n                                    noValidate\n                                    required\n                                />\n                                {errors.password.length > 0 && (\n                                    <span className=\"error\">\n                                        {errors.password}\n                                    </span>\n                                )}\n                            </div>\n                            <div className=\"info\">\n                                <small>\n                                    Password must be eight characters in length.\n                                </small>\n                            </div>\n                            <button\n                                type=\"submit\"\n                                className=\"btn btn-secondary btn-block\"\n                            >\n                                Submit\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n","import axios from \"axios\";\nconst url = \"/app/\";\n// const url = `http://${process.env.REACT_APP_IP_ADDRESS}:5000/app/`;\n\nexport const signUp = (newUser) => {\n    return axios\n        .post(url + \"signup\", {\n            fname: newUser.fname,\n            lname: newUser.lname,\n            email: newUser.email,\n            password: newUser.password,\n        })\n        .then((res) => {\n            console.log(res);\n            return res;\n        })\n        .catch((res) => {\n            console.log(res);\n            let errorMessage = { message: \"new error\" };\n            return errorMessage;\n        });\n};\n\nexport const signIn = (user) => {\n    return axios\n        .post(url + \"signin\", {\n            email: user.email,\n            password: user.password,\n        })\n        .then((res) => {\n            console.log(res);\n            if (res.status === 200) {\n                if (res.data[\"message\"] === \"User logged in successfully\") {\n                    localStorage.setItem(\"isLoggedIn\", res.data[\"isLoggedIn\"]);\n                    localStorage.setItem(\"fname\", res.data[\"fname\"]);\n                    localStorage.setItem(\"lname\", res.data[\"lname\"]);\n                    localStorage.setItem(\"email\", res.data[\"email\"]);\n                }\n            }\n            return res;\n        })\n        .catch((res) => {\n            console.log(res);\n            let errorMessage = { message: \"error\" };\n            return errorMessage;\n        });\n};\n","import React, { Component } from \"react\";\nimport { Link, Route, Switch } from \"react-router-dom\";\nimport { signUp } from \"./AccessApiCalls\";\nimport Login from \"./Login\";\n\nconst validEmailRegex = RegExp(/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,})+$/);\nconst nameRegex = RegExp(/^\\w+([.-]?\\w+)+$/);\nconst validateForm = (errors) => {\n    let valid = true;\n    Object.values(errors).forEach((val) => val.length > 0 && (valid = false));\n    return valid;\n};\n\nconst countErrors = (errors) => {\n    let count = 0;\n    Object.values(errors).forEach(\n        (val) => val.length > 0 && (count = count + 1)\n    );\n    return count;\n};\n\nexport default class SignUp extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            formValid: false,\n            fname: null,\n            lname: null,\n            email: null,\n            password: null,\n            repassword: null,\n            errors: {\n                fname: \"\",\n                lname: \"\",\n                email: \"\",\n                password: \"\",\n                repassword: \"\",\n            },\n        };\n    }\n\n    handleChange = (event) => {\n        event.preventDefault();\n        const { name, value } = event.target;\n        let errors = this.state.errors;\n        switch (name) {\n            case \"fname\":\n                errors.fname = nameRegex.test(value)\n                    ? \"\"\n                    : \"No special characters or numbers allowed\";\n                break;\n            case \"lname\":\n                errors.lname = nameRegex.test(value)\n                    ? \"\"\n                    : \"No special characters or numbers allowed\";\n                break;\n            case \"email\":\n                errors.email = validEmailRegex.test(value)\n                    ? \"\"\n                    : \"Email is not valid!\";\n                break;\n            case \"password\":\n                errors.password =\n                    value.length < 8\n                        ? \"Password must be 8 characters long!\"\n                        : \"\";\n                break;\n            case \"repassword\":\n                errors.repassword =\n                    value !== this.state.password\n                        ? \"Password does not match!\"\n                        : \"\";\n                break;\n            default:\n                break;\n        }\n\n        this.setState({ errors, [name]: value });\n    };\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.setState({ formValid: validateForm(this.state.errors) });\n        this.setState({ errorCount: countErrors(this.state.errors) });\n        const data = {\n            fname: this.state.fname,\n            lname: this.state.lname,\n            email: this.state.email,\n            password: this.state.password,\n        };\n        console.log(\"submit\");\n        console.log(data);\n        signUp(data).then((res) => {\n            console.log(res);\n            if (res.status === 200) {\n                if (res.data[\"message\"].includes(\"User added successfully\")) {\n                    this.props.history.push(\"/sign-in\");\n                    // window.location.reload();\n                } else {\n                    this.setState({\n                        errors: {\n                            fname: \"\",\n                            lname: \"\",\n                            email: res.data[\"message\"],\n                            password: \"\",\n                        },\n                    });\n                }\n            } else {\n                alert(\"Server Error!\");\n            }\n        });\n    };\n\n    render() {\n        const { errors, formValid } = this.state;\n        return (\n            <div class=\"container\">\n                <div class=\"jumbotron\">\n                    <form onSubmit={this.handleSubmit} noValidate>\n                        <h3>Sign Up</h3>\n                        <div className=\"form-group\">\n                            <label>First name</label>\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"First name\"\n                                name=\"fname\"\n                                onChange={this.handleChange}\n                                noValidate\n                                required\n                            />\n                            {errors.fname.length > 0 && (\n                                <span className=\"error\">{errors.fname}</span>\n                            )}\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label>Last name</label>\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Last name\"\n                                name=\"lname\"\n                                onChange={this.handleChange}\n                                noValidate\n                                required\n                            />\n                            {errors.lname.length > 0 && (\n                                <span className=\"error\">{errors.lname}</span>\n                            )}\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label>Email address</label>\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Enter email\"\n                                name=\"email\"\n                                onChange={this.handleChange}\n                                noValidate\n                                required\n                            />\n                            {errors.email.length > 0 && (\n                                <span className=\"error\">{errors.email}</span>\n                            )}\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label>Password</label>\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Enter password\"\n                                name=\"password\"\n                                onChange={this.handleChange}\n                                noValidate\n                                required\n                            />\n                            {errors.password.length > 0 && (\n                                <span className=\"error\">{errors.password}</span>\n                            )}\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label>Re-Enter Password</label>\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Re-Enter password\"\n                                name=\"repassword\"\n                                onChange={this.handleChange}\n                                noValidate\n                                required\n                            />\n                            {errors.repassword.length > 0 && (\n                                <span className=\"error\">\n                                    {errors.repassword}\n                                </span>\n                            )}\n                        </div>\n\n                        <button\n                            type=\"submit\"\n                            className=\"btn btn-primary btn-block\"\n                        >\n                            Sign Up\n                        </button>\n                        {this.state.errorCount !== null ? (\n                            <p className=\"form-status\">\n                                Form is {formValid ? \"valid ✅\" : \"invalid ❌\"}\n                            </p>\n                        ) : (\n                            \"Form not submitted\"\n                        )}\n                        <p className=\"forgot-password text-right\">\n                            <Link className=\"nav-link\" to={\"/sign-in\"}>\n                                Already registered? Sign in\n                            </Link>\n                            <Switch>\n                                <Route path=\"/sign-in\" component={Login} />\n                            </Switch>\n                        </p>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\n\nclass Logout extends Component {\n\n    componentDidMount() {\n        console.log(localStorage.getItem('isLoggedIn'))\n        localStorage.removeItem('isLoggedIn')\n        localStorage.removeItem('email')\n        localStorage.removeItem('fname')\n        localStorage.removeItem('lname')\n        this.props.history.push('/sign-in');\n    }\n\n    render() {\n        return (\n            <div>\n                Logged Out\n            </div>\n        );\n    }\n}\n\nexport default Logout","import React, { Component } from \"react\";\nimport { getbookings } from \"./BookingApiCalls\";\nimport { deletebooking } from \"./BookingApiCalls\";\nimport Navbar from \"./Navbar\";\nimport \"./ViewBookings.css\";\n\nexport default class ViewBookings extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            bookings: [],\n            message: \"\",\n            success: \"\",\n            present: false,\n        };\n        this.handleSearchKeyUp = this.keyUpHandler.bind();\n        this.deleteBooking = this.deleteBooking.bind(this);\n    }\n\n    deleteBooking(e) {\n        console.log(e.target.value);\n        var data = e.target.value;\n        data = data.split(\",\");\n        const object = {\n            email: localStorage.getItem(\"email\"),\n            operator: data[0],\n            source: data[1],\n            destination: data[2],\n            date: data[3],\n            bustime: data[4],\n        };\n        console.log(object);\n        deletebooking(object).then((res) => {\n            if (res.status === 200) {\n                if (res.data[\"message\"] === \"No bookings found\") {\n                    this.setState({\n                        message: res.data[\"message\"],\n                        present: false,\n                    });\n                } else {\n                    console.log(this.state.bookings);\n                    this.setState({\n                        success: res.data[\"message\"],\n                    });\n                    // this.props.history.push(\"/home\");\n                    const booking = {};\n                    getbookings(booking).then((res) => {\n                        if (res.status === 200) {\n                            if (res.data === null) {\n                                console.log(\"Test1\");\n                                this.setState({\n                                    message: \"\",\n                                    present: false,\n                                });\n                            } else if (\n                                res.data[\"message\"] === \"No bookings found\"\n                            ) {\n                                console.log(\"Test1\");\n                                this.setState({\n                                    message: res.data[\"message\"],\n                                    present: false,\n                                });\n                            } else {\n                                this.setState({\n                                    message: \"Data Present\",\n                                    bookings: res.data,\n                                    present: true,\n                                });\n                            }\n                        } else {\n                            console.log(\"Test2\");\n                            this.setState({\n                                message: \"\",\n                                present: false,\n                            });\n                        }\n                    });\n                }\n            } else {\n                this.setState({\n                    message: \"\",\n                    present: false,\n                });\n            }\n        });\n    }\n\n    keyUpHandler() {\n        // var input, filter, ul, li, a, i, txtValue;\n        // input = document.getElementById('myInput');\n        // filter = input.value.toUpperCase();\n        // ul = document.getElementById(\"myUL\");\n        // li = ul.getElementsByTagName('li');\n\n        // // Loop through all list items, and hide those who don't match the search query\n        // for (i = 0; i < li.length; i++) {\n        //   a = li[i].getElementsByTagName(\"a\")[0];\n        //   txtValue = a.textContent || a.innerText;\n        //   if (txtValue.toUpperCase().indexOf(filter) > -1) {\n        //     li[i].style.display = \"\";\n        //   } else {\n        //     li[i].style.display = \"none\";\n        //   }\n        // }\n\n        var input, filter, table, tr, td, i, txtValue;\n        input = document.getElementById(\"myInput\");\n        filter = input.value.toUpperCase();\n        table = document.getElementById(\"listbookings\");\n        tr = table.getElementsByTagName(\"a\");\n        console.log(tr);\n        for (i = 0; i < tr.length; i++) {\n            td = tr[i].getElementsByTagName(\"div\")[1];\n            if (td) {\n                txtValue = td.textContent || td.innerText;\n                if (txtValue.toUpperCase().indexOf(filter) > -1) {\n                    tr[i].style.display = \"\";\n                } else {\n                    tr[i].style.display = \"none\";\n                }\n            }\n        }\n    }\n\n    componentDidMount() {\n        if (localStorage.getItem(\"isLoggedIn\") === null) {\n            this.props.history.push(\"/\");\n        }\n        const booking = {};\n        getbookings(booking).then((res) => {\n            if (res.status === 200) {\n                if (res.data === null) {\n                    console.log(\"Test1\");\n                    this.setState({\n                        message: \"\",\n                        present: false,\n                    });\n                } else if (res.data[\"message\"] === \"No bookings found\") {\n                    console.log(\"Test1\");\n                    this.setState({\n                        message: res.data[\"message\"],\n                        present: false,\n                    });\n                } else {\n                    this.setState({\n                        message: \"Data Present\",\n                        bookings: res.data,\n                        present: true,\n                    });\n                }\n            } else {\n                console.log(\"Test2\");\n                this.setState({\n                    message: \"\",\n                    present: false,\n                });\n            }\n        });\n    }\n\n    render() {\n        return (\n            <>\n                <Navbar />\n                <div class=\"container\">\n                    <br />\n                    <br />\n                    <br />\n                    {/* <table id=\"bookings1\" hidden={this.state.present}><tr>No bookings available</tr></table> */}\n                    <input\n                        type=\"text\"\n                        id=\"myInput\"\n                        onKeyUp={this.handleSearchKeyUp}\n                        placeholder=\"Search for names..\"\n                        title=\"Type in a operator name\"\n                    ></input>\n                    {this.state.success !== \"\" && (\n                        <span className=\"success\">{this.state.success}</span>\n                    )}\n\n                    <div class=\"list-group \" id=\"listbookings\">\n                        {Object.keys(this.state.bookings).map(\n                            (booking, index) => (\n                                <a\n                                    href=\"#\"\n                                    class=\"list-group-item list-group-item-action flex-column align-items-start mt-2 table-striped \"\n                                >\n                                    <div class=\"d-flex w-100 justify-content-between\">\n                                        <h5 class=\"mb-1\">\n                                            {this.state.bookings[index][\n                                                \"source\"\n                                            ] +\n                                                \" to \" +\n                                                this.state.bookings[index][\n                                                    \"destination\"\n                                                ]}\n                                        </h5>\n                                        <button\n                                            type=\"button\"\n                                            class=\"btn btn-dark\"\n                                            value={\n                                                this.state.bookings[index][\n                                                    \"operator\"\n                                                ] +\n                                                \",\" +\n                                                this.state.bookings[index][\n                                                    \"source\"\n                                                ] +\n                                                \",\" +\n                                                this.state.bookings[index][\n                                                    \"destination\"\n                                                ] +\n                                                \",\" +\n                                                this.state.bookings[index][\n                                                    \"date\"\n                                                ] +\n                                                \",\" +\n                                                this.state.bookings[index][\n                                                    \"bustime\"\n                                                ]\n                                            }\n                                            onClick={this.deleteBooking}\n                                        >\n                                            Delete\n                                        </button>\n                                    </div>\n                                    <div class=\"mb-1  \">\n                                        {\"Operator : \" +\n                                            this.state.bookings[index][\n                                                \"operator\"\n                                            ]}\n                                    </div>\n                                    <div class=\"mb-1 \">\n                                        {\"Travel Date : \" +\n                                            this.state.bookings[index][\n                                                \"date\"\n                                            ].substring(0, 10)}\n                                    </div>\n                                    <div class=\"mb-1 \">\n                                        {\"Bus Time : \" +\n                                            this.state.bookings[index][\n                                                \"bustime\"\n                                            ]}\n                                    </div>\n                                </a>\n                            )\n                        )}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport { getbookings } from \"./BookingApiCalls\";\nimport { deletebooking } from \"./BookingApiCalls\";\nimport Navbar from \"./Navbar\";\n\nexport default class ViewBookings extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            bookings: [],\n            message: \"\",\n            success: \"\",\n            present: false,\n        };\n        this.handleSearchKeyUp = this.keyUpHandler.bind();\n        this.deleteBooking = this.deleteBooking.bind(this);\n    }\n\n    deleteBooking(e) {\n        console.log(e.target.value);\n        var data = e.target.value;\n        data = data.split(\",\");\n        const object = {\n            email: localStorage.getItem(\"email\"),\n            operator: data[0],\n            source: data[1],\n            destination: data[2],\n            date: data[3],\n            bustime: data[4],\n        };\n        console.log(object);\n        deletebooking(object).then((res) => {\n            if (res.status === 200) {\n                if (res.data[\"message\"] === \"No bookings found\") {\n                    this.setState({\n                        message: res.data[\"message\"],\n                        present: false,\n                    });\n                } else {\n                    console.log(this.state.bookings);\n                    this.setState({\n                        success: res.data[\"message\"],\n                    });\n                    this.props.history.push(\"/home\");\n                }\n            } else {\n                this.setState({\n                    message: \"\",\n                    present: false,\n                });\n            }\n        });\n    }\n\n    keyUpHandler() {\n        // var input, filter, ul, li, a, i, txtValue;\n        // input = document.getElementById('myInput');\n        // filter = input.value.toUpperCase();\n        // ul = document.getElementById(\"myUL\");\n        // li = ul.getElementsByTagName('li');\n\n        // // Loop through all list items, and hide those who don't match the search query\n        // for (i = 0; i < li.length; i++) {\n        //   a = li[i].getElementsByTagName(\"a\")[0];\n        //   txtValue = a.textContent || a.innerText;\n        //   if (txtValue.toUpperCase().indexOf(filter) > -1) {\n        //     li[i].style.display = \"\";\n        //   } else {\n        //     li[i].style.display = \"none\";\n        //   }\n        // }\n\n        var input, filter, table, tr, td, i, txtValue;\n        input = document.getElementById(\"myInput\");\n        filter = input.value.toUpperCase();\n        table = document.getElementById(\"bookings\");\n        tr = table.getElementsByTagName(\"tr\");\n        console.log(tr);\n        for (i = 0; i < tr.length; i++) {\n            td = tr[i].getElementsByTagName(\"td\")[1];\n            if (td) {\n                txtValue = td.textContent || td.innerText;\n                if (txtValue.toUpperCase().indexOf(filter) > -1) {\n                    tr[i].style.display = \"\";\n                } else {\n                    tr[i].style.display = \"none\";\n                }\n            }\n        }\n    }\n\n    componentDidMount() {\n        if (localStorage.getItem(\"isLoggedIn\") === null) {\n            this.props.history.push(\"/\");\n        }\n        const booking = {};\n        getbookings(booking).then((res) => {\n            if (res.status === 200) {\n                if (res.data === null) {\n                    console.log(\"Test1\");\n                    this.setState({\n                        message: \"\",\n                        present: false,\n                    });\n                } else if (res.data[\"message\"] === \"No bookings found\") {\n                    console.log(\"Test1\");\n                    this.setState({\n                        message: res.data[\"message\"],\n                        present: false,\n                    });\n                } else {\n                    this.setState({\n                        message: \"Data Present\",\n                        bookings: res.data,\n                        present: true,\n                    });\n                }\n            } else {\n                console.log(\"Test2\");\n                this.setState({\n                    message: \"\",\n                    present: false,\n                });\n            }\n        });\n    }\n\n    render() {\n        return (\n            <>\n                <Navbar />\n                <div class=\"container\">\n                    <br />\n                    <br />\n                    <br />\n                    {/* <table id=\"bookings1\" hidden={this.state.present}><tr>No bookings available</tr></table> */}\n                    <input\n                        type=\"text\"\n                        id=\"myInput\"\n                        onKeyUp={this.handleSearchKeyUp}\n                        placeholder=\"Search for names..\"\n                        title=\"Type in a operator name\"\n                    />\n                    {this.state.success !== \"\" && (\n                        <span className=\"success\">{this.state.success}</span>\n                    )}\n\n                    <table id=\"bookings\" hidden={!this.state.present}>\n                        <tbody>\n                            <tr>\n                                <th>Sr No.</th>\n                                <th>Operator</th>\n                                <th>Source</th>\n                                <th>Destination</th>\n                                <th>Date of Journey</th>\n                                <th>Actions</th>\n                            </tr>\n                            {Object.keys(this.state.bookings).map(\n                                (booking, index) => (\n                                    <tr>\n                                        <td>{index}</td>\n                                        <td\n                                            key={\n                                                this.state.bookings[index][\n                                                    \"operator\"\n                                                ]\n                                            }\n                                            value={\n                                                this.state.bookings[index][\n                                                    \"operator\"\n                                                ]\n                                            }\n                                        >\n                                            {\n                                                this.state.bookings[index][\n                                                    \"operator\"\n                                                ]\n                                            }\n                                        </td>\n                                        <td>\n                                            {\n                                                this.state.bookings[index][\n                                                    \"source\"\n                                                ]\n                                            }\n                                        </td>\n                                        <td>\n                                            {\n                                                this.state.bookings[index][\n                                                    \"destination\"\n                                                ]\n                                            }\n                                        </td>\n                                        <td>\n                                            {this.state.bookings[index][\n                                                \"date\"\n                                            ].substring(0, 10)}\n                                        </td>\n                                        <td>\n                                            <button\n                                                value={\n                                                    this.state.bookings[index][\n                                                        \"operator\"\n                                                    ] +\n                                                    \",\" +\n                                                    this.state.bookings[index][\n                                                        \"source\"\n                                                    ] +\n                                                    \",\" +\n                                                    this.state.bookings[index][\n                                                        \"destination\"\n                                                    ] +\n                                                    \",\" +\n                                                    this.state.bookings[index][\n                                                        \"date\"\n                                                    ] +\n                                                    \",\" +\n                                                    this.state.bookings[index][\n                                                        \"bustime\"\n                                                    ]\n                                                }\n                                                onClick={this.deleteBooking}\n                                            >\n                                                Cancel Booking\n                                            </button>\n                                        </td>\n                                    </tr>\n                                )\n                            )}\n                        </tbody>\n                    </table>\n                </div>\n            </>\n        );\n    }\n}\n","import { Component } from \"react\";\nimport Navbar from \"./Navbar\";\n\nclass Error extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <>\n                <Navbar />\n                <div class=\"container\">\n                    <h3 style={{ color: \"red\" }}>Page doesn't exist</h3>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Error;\n","import React from \"react\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n// import logo from './static/bus.png';\nimport Home from \"./components/HomePage\";\nimport Login from \"./components/Login\";\nimport SignUp from \"./components/SignUp\";\nimport Logout from \"./components/Logout\";\nimport ViewBookings from \"./components/ViewBookings\";\nimport ViewBookingsNew from \"./components/ViewBookingsNew\";\nimport Navbar from \"./components/Navbar\";\nimport Error from \"./components/Error\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Router>\n                <Navbar />\n                <Switch>\n                    <Route exact path=\"/\" component={Login} />\n                    <Route\n                        exact\n                        path=\"/view-bookings\"\n                        component={ViewBookingsNew}\n                    />\n                    <Route exact path=\"/home\" component={Home} />\n                    <Route exact path=\"/sign-in\" component={Login} />\n                    <Route exact path=\"/sign-up\" component={SignUp} />\n                    <Route exact path=\"/logout\" component={Logout} />\n                    <Route path=\"/\" component={Error} />\n                </Switch>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}